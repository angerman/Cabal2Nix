language: nix
matrix:
  include:
    - name: 18.09 macOS
      env: CHANNEL=nixpkgs-18.09-darwin
      os: osx
    - name: 18.09 nixOS
      env: CHANNEL=nixos-18.09

script:
- if [[ "$TRAVIS_OS_NAME" == "osx" && false ]]; then
  echo "trusted-users = root $USER"
  | sudo tee -a /etc/nix/nix.conf
  && sudo cat /etc/nix/nix.conf
  && sudo pkill nix-daemon
  && sudo nix-daemon
  && sleep 5;
  fi
- sudo cat /etc/nix/nix.conf
- nix-env -iA cachix -f https://github.com/NixOS/nixpkgs/tarball/889c72032f8595fcd7542c6032c208f6b8033db6
- cachix use nix-tools
- sudo cachix use nix-tools
- if [[ $TRAVIS_SECURE_ENV_VARS ]]; then
  nix-build
  -I nixpkgs=https://github.com/NixOS/nixpkgs-channels/archive/${CHANNEL}.tar.gz
  -A nix-tools-all-execs
  --cores 0
  --option trusted-users "root $USER"
  --option substituters "https://cache.nixos.org/ https://nix-tools.cachix.org"
  --option trusted-substituters "https://cache.nixos.org/ https://nix-tools.cachix.org"
  --option trusted-public-keys "cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-tools.cachix.org-1:ebBEBZLogLxcCvipq2MTvuHlP7ZRdkazFSQsbs0Px1A="
  | cachix push nix-tools;
  else
  nix-build
  -I nixpkgs=https://github.com/NixOS/nixpkgs-channels/archive/${CHANNEL}.tar.gz
  -A nix-tools-all-execs
  --cores 0
  --option trusted-users "root $USER"
  --option substituters "https://cache.nixos.org/ https://nix-tools.cachix.org"
  --option trusted-substituters "https://cache.nixos.org/ https://nix-tools.cachix.org"
  --option trusted-public-keys "cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-tools.cachix.org-1:ebBEBZLogLxcCvipq2MTvuHlP7ZRdkazFSQsbs0Px1A=";
  fi

env:
  global:
    secure: wpJCKjz4HAN0UBN8261g8Wp1UpSW5KjggCSGWBT72gvoB4F+uqqzHeVr4sKpaDcDVEUgirmYvcGi0UerkBKygvQMwTNI7rXvIk4wHG16T1M/1G/Ck7w0ca5bQNtt+lEStTmP2RS9VOvu9AOrqUBP4NDvTy0K96dQg7yGAVnVydsmn6KMJ5sSyLp8jKYYVhYrx/1HPEgFWR69W1LMsXdP6bI3PGTkBaXHaSYlfubMvFxSU5EkYuI0O6Y35BrT0guVJRu+uhE25lFVum00gSOclh8ZkurtYfioamdnkDr0AwiWj5MZ6m3hIOml6OS+yJrmUncet+G7m03xIz/sQBCrZgsFJIQDAktH0lOiqVxHipy9ufdyMoBblN6Zq90YlvVcflhtibo25HoXTKyY2fJaN9DOD5HPTDsKQmYYs/FjDLUqntlGuF3vjnFA4ZcfqpQTBYyHgdbCnvTZTbxYYhbaaIyJ7nnEGuQckMqqfM2Wu7enDhbH0xRXufhsC4imEF2sJFkXWR4Q5V4G1I+dj/FW1vgyYMJCoC9IHRPjUcdLSmiaDTdW/xjTqR3P2XXxdqD9SLxMaYo9KeqmhF7zMUn+sxHyhm76ci2SRjK9nOFlmggw/VtSag292WJaWdUJROo3XJbOA+e5YYR6uYRpB5UqVFaZZBlgxHcaVsCl217cbj0=
